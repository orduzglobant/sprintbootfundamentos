-- This script was generated by a beta version of the ERD tool in pgAdmin 4.
-- Please log an issue at https://redmine.postgresql.org/projects/pgadmin4/issues/new if you find any bugs, including reproduction steps.
BEGIN;


CREATE TABLE category
(
    category_id SERIAL NOT NULL,
    description VARCHAR(45) NOT NULL,
    status BOOLEAN NOT NULL,
    CONSTRAINT category_pkey PRIMARY KEY (category_id)
)
WITH (
    OIDS = FALSE
);

CREATE TABLE purchase
(
    purchase_id SERIAL NOT NULL,
    client_id VARCHAR(20) NOT NULL,
    date timestamp without time zone,
    half_payment CHAR(1) NULL,
    commentary VARCHAR(300) NULL,
    status CHAR(1) NULL,
    seller_id integer,
    CONSTRAINT purchase_pkey PRIMARY KEY (purchase_id)
)
WITH (
    OIDS = FALSE
);

CREATE TABLE purchase_products
(
    purchase_id INT NOT NULL,
    product_id INT NOT NULL,
    amount INT NULL,
    total DECIMAL(16,2) NULL,
    status CHAR(1) NULL,
    CONSTRAINT purchase_products_pkey PRIMARY KEY (purchase_id, product_id)
)
WITH (
    OIDS = FALSE
);

CREATE TABLE products
(
    product_id SERIAL NOT NULL,
    name VARCHAR(45) NULL,
    category_id INT NOT NULL,
    barcode VARCHAR(150) NULL,
    sale_price DECIMAL(16,2) NULL,
    amount_stock INT NOT NULL,
    status CHAR(1) NULL,
    brand_id INT NOT NULL,
    model character varying(50),
    CONSTRAINT products_pkey PRIMARY KEY (product_id)
)
WITH (
    OIDS = FALSE
);

CREATE TABLE users
(
    id character varying(20) COLLATE pg_catalog."default" NOT NULL,
    name character varying(40) COLLATE pg_catalog."default",
    surnames character varying(100) COLLATE pg_catalog."default",
    cell_phone numeric,
    address character varying(80) COLLATE pg_catalog."default",
    email character varying(70) COLLATE pg_catalog."default",
    photo_url character varying(100),
    password character varying(250),
    CONSTRAINT users_pkey PRIMARY KEY (id)
)
WITH (
    OIDS = FALSE
);

CREATE TABLE brand
(
    brand_id serial,
    brand_name character varying(50),
    PRIMARY KEY (brand_id)
)
WITH (
    OIDS = FALSE
);

CREATE TABLE roles
(
    rol_id serial,
    rol_name character varying(50),
    PRIMARY KEY (rol_id)
)
WITH (
    OIDS = FALSE
);

CREATE TABLE roles_users
(
    roles_rol_id serial,
    users_id character varying(20) COLLATE pg_catalog."default" NOT NULL,
    enable boolean DEFAULT false
)
WITH (
    OIDS = FALSE
);

CREATE TABLE locations
(
    locations_id serial,
    locations_name character varying(100),
    locations_email character varying(100),
    PRIMARY KEY (locations_id)
)
WITH (
    OIDS = FALSE
);



CREATE TABLE locations_products
(
    locations_locations_id INT NOT NULL,
    products_product_id INT NOT NULL,
    amount_stock INT,
    sale_price numeric,
    PRIMARY KEY (locations_locations_id, products_product_id)
);


CREATE TABLE contract
(
    contract_id serial,
    contract_name character varying(100),
    contract_observations character varying(250),
    PRIMARY KEY (contract_id)
)
WITH (
    OIDS = FALSE
);

CREATE TABLE users_contract
(
    users_id character varying(20) COLLATE pg_catalog."default" NOT NULL,
    contract_contract_id serial,
    contract_status boolean DEFAULT true,
    contract_startDate date,
    contract_endDate date
)
WITH (
    OIDS = FALSE
);

CREATE TABLE evaluations
(
    evaluation_id serial,
    evaluation_name character varying(150),
    PRIMARY KEY (evaluation_id)
)
WITH (
    OIDS = FALSE
);

CREATE TABLE users_evaluations
(
    users_id character varying(20) COLLATE pg_catalog."default" NOT NULL,
    evaluations_evaluation_id serial,
    evaluation_performance integer,
    evaluation_startDate date,
    evaluation_endDate date
)
WITH (
    OIDS = FALSE
);

ALTER TABLE IF EXISTS public.purchase
    ADD CONSTRAINT "fk_purchase_users1" FOREIGN KEY (client_id)
    REFERENCES public.users (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.purchase_products
    ADD CONSTRAINT "fk_purchase_products_purchase1" FOREIGN KEY (purchase_id)
    REFERENCES public.purchase (purchase_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.purchase_products
    ADD CONSTRAINT "fk_purchase_products_products1" FOREIGN KEY (product_id)
    REFERENCES public.products (product_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.products
    ADD CONSTRAINT "fk_products_category" FOREIGN KEY (category_id)
    REFERENCES public.category (category_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;

ALTER TABLE IF EXISTS public.products
    ADD CONSTRAINT "fk_products_brand" FOREIGN KEY (brand_id)
    REFERENCES public.brand (brand_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;

ALTER TABLE IF EXISTS public.roles_users
    ADD FOREIGN KEY (roles_rol_id)
    REFERENCES public.roles (rol_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.roles_users
    ADD FOREIGN KEY (users_id)
    REFERENCES public.users (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.locations_products
    ADD FOREIGN KEY (locations_locations_id)
    REFERENCES public.locations (locations_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.locations_products
    ADD FOREIGN KEY (products_product_id)
    REFERENCES public.products (product_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.users_contract
    ADD FOREIGN KEY (users_id)
    REFERENCES public.users (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.users_contract
    ADD FOREIGN KEY (contract_contract_id)
    REFERENCES public.contract (contract_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.users_evaluations
    ADD FOREIGN KEY (users_id)
    REFERENCES public.users (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.users_evaluations
    ADD FOREIGN KEY (evaluations_evaluation_id)
    REFERENCES public.evaluations (evaluation_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;

END;